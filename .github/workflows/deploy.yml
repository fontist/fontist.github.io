name: deploy

on:
  push:
    branches:
    - main
    - staging
  repository_dispatch:

jobs:
  set_environment:
    outputs:
      my_env: ${{ steps.setenv.outputs.my_env }}
      my_url: ${{ steps.setenv.outputs.my_url }}
    runs-on: ubuntu-latest
    steps:
    - id: setenv
      run: |
        if [ "$GITHUB_REF" = "refs/heads/main" ]
        then
          echo "::set-output name=my_env::production"
          echo "::set-output name=my_url::https://www.fontist.org"
        elif [ "$GITHUB_REF" = "refs/heads/staging" ]
        then
          echo "::set-output name=my_env::staging"
          echo "::set-output name=my_url::https://staging-www.fontist.org"
        fi

  build_deploy:
    name: Build and deploy to ${{ needs.set_environment.outputs.my_env }}
    runs-on: ubuntu-latest
    needs: [set_environment]
    environment:
      name: ${{ needs.set_environment.outputs.my_env }}
      url: ${{ needs.set_environment.outputs.my_url }}
    steps:
    - uses: actions/checkout@v2

    - uses: unfor19/install-aws-cli-action@v1

    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true

    - name: Build site
      env:
        JEKYLL_ENV: production
      run: |
        make _site

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: _site

    # - name: Deploy to AWS
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_REGION: ${{ secrets.AWS_REGION }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
    #     S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
    #   run: |
    #     aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --exclude "*" --include "*.html" --content-type "text/html; charset=utf-8"
    #     aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --exclude "*" --include "*.json" --content-type "text/json; charset=utf-8"
    #     aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --exclude "*.html,*.json" --include "*"
    #     aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
